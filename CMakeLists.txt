CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE "DEBUG")
  #SET(CMAKE_BUILD_TYPE "RELEASE")
  #SET(CMAKE_BUILD_TYPE "RELWITHDEBINFO")
  #SET(CMAKE_BUILD_TYPE "MINSIZEREL")
ENDIF()

set(SDL_CFLAGS `sdl-config --cflags --libs`)
string (REPLACE ";" " " SDL_CFLAG_STR "${SDL_CFLAGS}")

FIND_PACKAGE(Boost 1.45.0)
IF(Boost_FOUND)
  INCLUDE_DIRECTORIES("${Boost_INCLUDE_DIRS}" "/usr/include/python2.7")
  SET(Boost_USE_STATIC_LIBS OFF)
  SET(Boost_USE_MULTITHREADED ON)
  SET(Boost_USE_STATIC_RUNTIME OFF)
  FIND_PACKAGE(Boost 1.45.0 COMPONENTS python)
  file(GLOB SOURCES 
    "native/*.cpp"
  )
  foreach(file ${SOURCES})
    get_filename_component (name_without_extension ${file} NAME_WE)
    ADD_LIBRARY("${name_without_extension}" SHARED "${file}")
    TARGET_LINK_LIBRARIES("${name_without_extension}" ${Boost_LIBRARIES})
  endforeach(file)
  file(GLOB SOURCES 
    "native/graphics/*.cpp"
  ) 
  foreach(file ${SOURCES})
    set_source_files_properties(${file} PROPERTIES COMPILE_FLAGS "${SDL_CFLAG_STR}")  
    add_executable(gui${file})
    INCLUDE(FindPkgConfig)
    PKG_SEARCH_MODULE(SDL2 REQUIRED sdl2)
    INCLUDE_DIRECTORIES(${SDL2_INCLUDE_DIRS})
    TARGET_LINK_LIBRARIES(gui${SDL2_LIBRARIES})
  endforeach(file)  
ELSEIF(NOT Boost_FOUND)
  MESSAGE(FATAL_ERROR "Unable to find correct Boost version. Did you set BOOST_ROOT?")
ENDIF()

IF(CMAKE_COMPILER_IS_GNUCXX)
  ADD_DEFINITIONS("-Wall -std=c++0x")
ELSE()
  MESSAGE(FATAL_ERROR "CMakeLists.txt has not been tested/written for your compiler.")
ENDIF()
